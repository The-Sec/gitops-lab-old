---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vikunja-config
data:
  config.yaml: |
    service:
      publicurl: "https://todo.apps.groeneveld.me/"
      enableregistration: false
      enableemailreminders: true
      enableuserdeletion: true
      maxavatarsize: 1024
      demomode: false
      allowiconchanges: true
      enablepublicteams: false

    database:
      type: "sqlite"
      database: "vikunja"
      path: "/app/vikunja/files/vikunja.db"

    typesense:
      enabled: false

    redis:
      enabled: false

    cors:
      enable: false

    mailer:
      # Whether to enable the mailer or not. If it is disabled, all users are enabled right away and password reset is not possible.
      enabled: true
      # SMTP Host
      host: "smtp.office365.com"
      # SMTP Host port.
      # **NOTE:** If you're unable to send mail and the only error you see in the logs is an `EOF`, try setting the port to `25`.
      port: 25
      # SMTP Auth Type. Can be either `plain`, `login` or `cram-md5`.
      authtype: "plain"
      # SMTP username
      username: ""
      # SMTP password
      password: ""
      # Whether to skip verification of the tls certificate on the server
      skiptlsverify: false
      # The default from address when sending emails
      fromemail: "vikunja@groeneveld.me"
      # The length of the mail queue.
      queuelength: 100
      # The timeout in seconds after which the current open connection to the mailserver will be closed.
      queuetimeout: 30
      # By default, Vikunja will try to connect with starttls, use this option to force it to use ssl.
      forcessl: false

    log:
      # A folder where all the logfiles should go.
      path: /app/vikunja/logs
      # Whether to show any logging at all or none
      enabled: true
      # Where the normal log should go. Possible values are stdout, stderr, file or off to disable standard logging.
      standard: "stdout"
      # Change the log level. Possible values (case-insensitive) are CRITICAL, ERROR, WARNING, NOTICE, INFO, DEBUG.
      level: "DEBUG"
      # Whether or not to log database queries. Useful for debugging. Possible values are stdout, stderr, file or off to disable database logging.
      database: "off"
      # The log level for database log messages. Possible values (case-insensitive) are CRITICAL, ERROR, WARNING, NOTICE, INFO, DEBUG.
      databaselevel: "WARNING"
      # Whether to log http requests or not. Possible values are stdout, stderr, file or off to disable http logging.
      http: "stdout"
      # Echo has its own logging which usually is unnecessary, which is why it is disabled by default. Possible values are stdout, stderr, file or off to disable standard logging.
      echo: "off"
      # Whether or not to log events. Useful for debugging. Possible values are stdout, stderr, file or off to disable events logging.
      events: "off"
      # The log level for event log messages. Possible values (case-insensitive) are ERROR, INFO, DEBUG.
      eventslevel: "info"
      # Whether or not to log mail log messages. This will not log mail contents. Possible values are stdout, stderr, file or off to disable mail-related logging.
      mail: "stdout"
      # The log level for mail log messages. Possible values (case-insensitive) are ERROR, WARNING, INFO, DEBUG.
      maillevel: "debug"

    files:
      # The path where files are stored
      basepath: ./files # relative to the binary
      # The maximum size of a file, as a human-readable string.
      # Warning: The max size is limited 2^64-1 bytes due to the underlying datatype
      maxsize: 20MB

    avatar:
      # When using gravatar, this is the duration in seconds until a cached gravatar user avatar expires
      gravatarexpiration: 3600

    backgrounds:
      # Whether to enable backgrounds for projects at all.
      enabled: true
      providers:
        upload:
          # Whether to enable uploaded project backgrounds
          enabled: true
        unsplash:
          # Whether to enable setting backgrounds from unsplash as project backgrounds
          enabled: false
          # You need to create an application for your installation at https://unsplash.com/oauth/applications/new
          # and set the access token below.
          accesstoken:
          # The unsplash application id is only used for pingback and required as per their api guidelines.
          # You can find the Application ID in the dashboard for your API application. It should be a numeric ID.
          # It will only show in the UI if your application has been approved for Enterprise usage, therefore if
          # youâ€™re in Demo mode, you can also find the ID in the URL at the end: https://unsplash.com/oauth/applications/:application_id
          applicationid:

    # Legal urls
    # Will be shown in the frontend if configured here
    legal:
      imprinturl:
      privacyurl:

    # Key Value Storage settings
    # The Key Value Storage is used for different kinds of things like metrics and a few cache systems.
    keyvalue:
      # The type of the storage backend. Can be either "memory" or "redis". If "redis" is chosen it needs to be configured separately.
      type: "memory"

    auth:
      # Local authentication will let users log in and register (if enabled) through the db.
      # This is the default auth mechanism and does not require any additional configuration.
      local:
        # Enable or disable local authentication
        enabled: true
      openid:
        # Enable or disable OpenID Connect authentication
        enabled: false

    # Prometheus metrics endpoint
    metrics:
      # If set to true, enables a /metrics endpoint for prometheus to collect metrics about Vikunja. You can query it from `/api/v1/metrics`.
      enabled: true
      # If set to a non-empty value the /metrics endpoint will require this as a username via basic auth in combination with the password below.
      username:
      # If set to a non-empty value the /metrics endpoint will require this as a password via basic auth in combination with the username below.
      password:

    # Provide default settings for new users. When a new user is created, these settings will automatically be set for the user. If you change them in the config file afterwards they will not be changed back for existing users.
    defaultsettings:
      # The avatar source for the user. Can be `gravatar`, `initials`, `upload` or `marble`. If you set this to `upload` you'll also need to specify `defaultsettings.avatar_file_id`.
      avatar_provider: initials
      # The id of the file used as avatar.
      avatar_file_id: 0
      # If set to true users will get task reminders via email.
      email_reminders_enabled: false
      # If set to true will allow other users to find this user when searching for parts of their name.
      discoverable_by_name: false
      # If set to true will allow other users to find this user when searching for their exact email.
      discoverable_by_email: false
      # If set to true will send an email every day with all overdue tasks at a configured time.
      overdue_tasks_reminders_enabled: true
      # When to send the overdue task reminder email.
      overdue_tasks_reminders_time: 4:30
      # The id of the default project. Make sure users actually have access to this project when setting this value.
      default_project_id: 0
      # Start of the week for the user. `0` is sunday, `1` is monday and so on.
      week_start: 0
      # The language of the user interface. Must be an ISO 639-1 language code followed by an ISO 3166-1 alpha-2 country code. Check https://kolaente.dev/vikunja/vikunja/frontend/src/branch/main/src/i18n/lang for a list of possible languages. Will default to the browser language the user uses when signing up.
      language: "en"
      # The time zone of each individual user. This will affect when users get reminders and overdue task emails.
      timezone: "Europe/Amsterdam"

    webhooks:
      # Whether to enable support for webhooks
      enabled: true
      # The timeout in seconds until a webhook request fails when no response has been received.
      timeoutseconds: 30
      # The URL of [a mole instance](https://github.com/frain-dev/mole) to use to proxy outgoing webhook requests. You should use this and configure appropriately if you're not the only one using your Vikunja instance. More info about why: https://webhooks.fyi/best-practices/webhook-providers#implement-security-on-egress-communication. Must be used in combination with `webhooks.password` (see below).
      proxyurl:
      # The proxy password to use when authenticating against the proxy.
      proxypassword:
