---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: restic-backup
  namespace: games  # Change me
spec:
  concurrencyPolicy: Forbid
  schedule: "12 2 * * *"  # Change me if needed (02:12 daily)
  jobTemplate:
    spec:
      template:
        spec:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          containers:
          - name: restic
            image: restic/restic:latest
            # command: "/bin/sh -c '[ 0==`/usr/bin/find . -type f -name .paused -mtime -1 | /usr/bin/wc -l` ] && echo \"True\"|| echo \"Pauzed for more than 24 hours\" '"
            command: ["/bin/sh","-c", "[ 1 == `/usr/bin/find . -type f -name .paused -mtime -1 | /usr/bin/wc -l` ] && /usr/bin/restic backup --host rke2 . || echo \"Pauzed for more than 24 hours\""]
            workingDir: /data
            # args:
            #   - backup
            #   - --host
            #   - rke2  # set a consistent hostname to avoid restic rescans
            #   - .           # use workingDir to set path
            env:
              - name: RESTIC_REPOSITORY
                value: 's3:https://s3.eu-central-003.backblazeb2.com/green-minecraft/'
              - name: RESTIC_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: s3-minecraft-keys
                    key: resticKey
                    optional: false
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: s3-minecraft-keys
                    key: keyID
                    optional: false
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: s3-minecraft-keys
                    key: applicationKey
                    optional: false
            volumeMounts:
              - name: backupdata
                mountPath: /data
                readOnly: true
            securityContext:
              allowPrivilegeEscalation: false
          volumes:
            - name: backupdata
              persistentVolumeClaim:
                claimName: minecraft-data
          restartPolicy: OnFailure
